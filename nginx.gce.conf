user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 50m;

    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    upstream backend_app {
        server backend:8080;
        keepalive 32;
    }

    # HTTP server: serve ACME challenge and redirect to HTTPS
    server {
        listen 80 default_server;
        server_name _;

        # ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot; # shared volume with certbot
        }

        # Health endpoint for load balancer checks
        location = /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'ok';
        }

        location /static/ { return 301 https://$host$request_uri; }
        location /media/  { return 301 https://$host$request_uri; }
        location /        { return 301 https://$host$request_uri; }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name _;

        ssl_certificate /etc/letsencrypt/live/co.riverlearn.co.ke/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/co.riverlearn.co.ke/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Health endpoint
        location = /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'ok';
        }

        # Serve static files
        location /static/ {
            alias /var/www/static/;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
        }

        # Serve favicons from built frontend
        location = /favicon.ico {
            alias /var/www/static/browser/favicon.ico;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
        }
        location = /favicon.svg {
            alias /var/www/static/browser/favicon.svg;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
        }

        # Serve media files
        location /media/ {
            alias /var/www/media/;
            access_log off;
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
        }

        # Proxy XMPP WebSocket to Jitsi Prosody via Jitsi web
        # This keeps the browser on same-origin while leveraging the Jitsi server
        location /xmpp-websocket {
            proxy_pass https://jitsi.riverlearn.co.ke/xmpp-websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }

        # Optional: BOSH fallback proxied to Jitsi web (which forwards to Prosody)
        location /http-bind {
            proxy_pass https://jitsi.riverlearn.co.ke/http-bind;
            proxy_set_header Host $host;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
        }

        # WebSocket proxy for Django Channels
        location /ws/ {
            proxy_pass http://backend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Proxy API and app
        location / {
            proxy_pass http://backend_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_buffering on;
            proxy_buffers 16 16k;
            proxy_busy_buffers_size 24k;
            proxy_read_timeout 120s;
        }
    }
}

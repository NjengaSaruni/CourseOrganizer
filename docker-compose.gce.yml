services:
  redis:
    image: redis:7-alpine
    container_name: course-organizer-redis
    restart: unless-stopped
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

  postgres:
    image: postgres:15
    container_name: course-organizer-postgres
    restart: unless-stopped
    env_file:
      - docker-compose.gce.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-course_organizer}
      - POSTGRES_USER=${POSTGRES_USER:-course_organizer}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-change_me}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-course_organizer} -d ${POSTGRES_DB:-course_organizer}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
  backend:
    build:
      context: .
      dockerfile: Dockerfile.gce
    container_name: course-organizer-backend
    restart: unless-stopped
    env_file:
      - docker-compose.gce.env
    ports:
      - "8080:8080"
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,34.121.171.1,co.riverlearn.co.ke}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://co.riverlearn.co.ke,https://jitsi.riverlearn.co.ke}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-https://co.riverlearn.co.ke}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.googlemail.com}
      - EMAIL_PORT=${EMAIL_PORT:-465}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-False}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-True}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-Course Organizer <noreply@riverlearn.co.ke>}
      - FRONTEND_URL=${FRONTEND_URL:-https://co.riverlearn.co.ke}
      - DATABASE_URL=${DATABASE_URL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - JITSI_DOMAIN=${JITSI_DOMAIN:-jitsi.riverlearn.co.ke}
      - JITSI_APP_ID=${JITSI_APP_ID:-course-organizer}
      - JITSI_AUDIENCE=${JITSI_AUDIENCE:-jitsi}
      - JITSI_ISSUER=${JITSI_ISSUER:-course-organizer}
      - JITSI_PRIVATE_KEY=${JITSI_PRIVATE_KEY}
      - JITSI_PUBLIC_KEY=${JITSI_PUBLIC_KEY}
    volumes:
      - static_files:/app/static
      - /opt/course-organizer-data/media:/app/media
      - db_data:/app/db
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: course-organizer-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.gce.conf:/etc/nginx/nginx.conf:ro
      - static_files:/var/www/static:ro
      - /opt/course-organizer-data/media:/var/www/media:ro
      - ./ssl:/etc/nginx/ssl:ro
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  certbot:
    image: certbot/certbot:latest
    container_name: course-organizer-certbot
    restart: unless-stopped
    volumes:
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    entrypoint: /bin/sh
    command: -c "trap 'exit 0' TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet --deploy-hook 'nginx -s reload' || true; sleep 12h; done"
    depends_on:
      - nginx

volumes:
  static_files:
  db_data:
  certbot-webroot:
  letsencrypt:
  pg_data:

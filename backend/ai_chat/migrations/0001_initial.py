# Generated by Django 5.2.6 on 2025-11-01 05:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('course_api', '0003_add_group_materials'),
        ('course_content', '0002_alter_announcement_file_url_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='Auto-generated or user-provided title', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_conversations', to='course_api.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chat Conversation',
                'verbose_name_plural': 'Chat Conversations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('tool_call', 'Tool Call'), ('resource_read', 'Resource Read'), ('resource_list', 'Resource List'), ('prompt', 'Prompt'), ('chat_message', 'Chat Message')], max_length=20)),
                ('tool_name', models.CharField(blank=True, max_length=100)),
                ('resource_uri', models.CharField(blank=True, max_length=200)),
                ('request_data', models.JSONField(default=dict)),
                ('response_data', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_interactions', to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interactions', to='ai_chat.chatconversation')),
            ],
            options={
                'verbose_name': 'Agent Interaction',
                'verbose_name_plural': 'Agent Interactions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System')], max_length=20)),
                ('content', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata (tool calls, context, etc.)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_chat.chatconversation')),
            ],
            options={
                'verbose_name': 'Chat Message',
                'verbose_name_plural': 'Chat Messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the concept')),
                ('keywords', models.JSONField(blank=True, default=list, help_text='Alternative names and keywords for this concept')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_concept', models.ForeignKey(blank=True, help_text='Parent concept in knowledge hierarchy', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_concepts', to='ai_chat.concept')),
            ],
            options={
                'verbose_name': 'Concept',
                'verbose_name_plural': 'Concepts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ConceptMastery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mastery_level', models.CharField(choices=[('not_started', 'Not Started'), ('introduced', 'Introduced'), ('developing', 'Developing'), ('proficient', 'Proficient'), ('mastered', 'Mastered')], default='not_started', max_length=20)),
                ('mastery_score', models.FloatField(default=0.0, help_text='Numerical mastery score (0.0 to 1.0)')),
                ('last_assessed_at', models.DateTimeField(blank=True, null=True)),
                ('assessment_count', models.IntegerField(default=0, help_text='Number of times this concept has been assessed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='masteries', to='ai_chat.concept')),
                ('course', models.ForeignKey(blank=True, help_text='Course context for this mastery', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concept_masteries', to='course_api.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_masteries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Concept Mastery',
                'verbose_name_plural': 'Concept Masteries',
                'ordering': ['-mastery_score', '-updated_at'],
                'unique_together': {('user', 'concept', 'course')},
            },
        ),
        migrations.CreateModel(
            name='CourseConcept',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extracted_at', models.DateTimeField(auto_now_add=True)),
                ('extraction_method', models.CharField(default='manual', help_text='Method used to extract this concept (manual, ai_extraction, etc.)', max_length=50)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_references', to='ai_chat.concept')),
                ('course_outline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concepts', to='course_content.courseoutline')),
            ],
            options={
                'verbose_name': 'Course Concept',
                'verbose_name_plural': 'Course Concepts',
                'unique_together': {('course_outline', 'concept')},
            },
        ),
    ]

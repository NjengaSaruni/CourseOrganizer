# Generated by Django 5.2.6 on 2025-09-19 05:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('course_api', '0005_coursecontent'),
        ('directory', '0006_remove_academicyear_first_semester_end_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, help_text='Direct URL to the content')),
                ('file_path', models.CharField(blank=True, help_text='Local file path', max_length=500)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('announcement_type', models.CharField(choices=[('general', 'General'), ('important', 'Important'), ('reminder', 'Reminder'), ('deadline', 'Deadline'), ('event', 'Event'), ('other', 'Other')], default='general', help_text='Type of announcement', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level', max_length=10)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this announcement expires', null=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='course_api.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.semester')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, help_text='Direct URL to the content')),
                ('file_path', models.CharField(blank=True, help_text='Local file path', max_length=500)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material_type', models.CharField(choices=[('pdf', 'PDF Document'), ('doc', 'Word Document'), ('ppt', 'PowerPoint'), ('video', 'Video File'), ('audio', 'Audio File'), ('image', 'Image'), ('link', 'External Link'), ('other', 'Other')], help_text='Type of material', max_length=20)),
                ('lesson_date', models.DateField(blank=True, help_text='Date when this material was used (optional)', null=True)),
                ('lesson_order', models.PositiveIntegerField(default=0, help_text='Order within lesson (0 for general materials)')),
                ('topic', models.CharField(blank=True, help_text='Topic or chapter name', max_length=200)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='course_api.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.semester')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
                'ordering': ['lesson_date', 'lesson_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, help_text='Direct URL to the content')),
                ('file_path', models.CharField(blank=True, help_text='Local file path', max_length=500)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment_type', models.CharField(choices=[('homework', 'Homework'), ('project', 'Project'), ('essay', 'Essay'), ('presentation', 'Presentation'), ('lab', 'Lab Work'), ('other', 'Other')], default='homework', help_text='Type of assignment', max_length=20)),
                ('lesson_date', models.DateField(help_text='Date when the assignment was given')),
                ('due_date', models.DateField(help_text='Due date for the assignment')),
                ('lesson_order', models.PositiveIntegerField(default=1, help_text='Order of this assignment within the lesson')),
                ('topic', models.CharField(blank=True, help_text='Topic or chapter name', max_length=200)),
                ('max_marks', models.PositiveIntegerField(blank=True, help_text='Maximum marks for this assignment', null=True)),
                ('instructions', models.TextField(blank=True, help_text='Detailed instructions for the assignment')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='course_api.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.semester')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'ordering': ['lesson_date', 'lesson_order'],
                'unique_together': {('course', 'lesson_date', 'lesson_order')},
            },
        ),
        migrations.CreateModel(
            name='CourseOutline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, help_text='Direct URL to the content')),
                ('file_path', models.CharField(blank=True, help_text='Local file path', max_length=500)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material_type', models.CharField(choices=[('pdf', 'PDF Document'), ('doc', 'Word Document'), ('docx', 'Word Document (DOCX)')], default='pdf', help_text='Type of document', max_length=20)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='course_api.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.semester')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course Outline',
                'verbose_name_plural': 'Course Outlines',
                'unique_together': {('course', 'academic_year', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='PastPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, help_text='Direct URL to the content')),
                ('file_path', models.CharField(blank=True, help_text='Local file path', max_length=500)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam_type', models.CharField(choices=[('midterm', 'Midterm Exam'), ('final', 'Final Exam'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('other', 'Other')], default='final', help_text='Type of examination', max_length=50)),
                ('exam_date', models.DateField(blank=True, help_text='Date when the exam was conducted', null=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='course_api.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.semester')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Past Paper',
                'verbose_name_plural': 'Past Papers',
                'unique_together': {('course', 'academic_year', 'semester', 'title')},
            },
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, help_text='Direct URL to the content')),
                ('file_path', models.CharField(blank=True, help_text='Local file path', max_length=500)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recording_platform', models.CharField(choices=[('zoom', 'Zoom'), ('google_meet', 'Google Meet'), ('teams', 'Microsoft Teams'), ('physical', 'Physical Meeting'), ('other', 'Other')], help_text='Platform used for recording', max_length=20)),
                ('lesson_date', models.DateField(help_text='Date when the lesson was conducted')),
                ('lesson_order', models.PositiveIntegerField(default=1, help_text='Order of this recording within the lesson')),
                ('topic', models.CharField(blank=True, help_text='Topic or chapter name', max_length=200)),
                ('duration', models.CharField(blank=True, help_text='Duration in minutes or HH:MM:SS format', max_length=20)),
                ('audio_only', models.BooleanField(default=False, help_text='Whether this is an audio-only recording')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='course_api.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_content', to='directory.semester')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recording',
                'verbose_name_plural': 'Recordings',
                'ordering': ['lesson_date', 'lesson_order'],
                'unique_together': {('course', 'lesson_date', 'lesson_order')},
            },
        ),
    ]

# Generated by Django 5.2.6 on 2025-09-14 10:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('directory', '0004_delete_class'),
        ('school', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('year', models.IntegerField(choices=[(1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year')], help_text='Academic year (1-4)')),
                ('semester', models.IntegerField(choices=[(1, 'First Semester'), (2, 'Second Semester'), (3, 'Holiday Semester')], help_text='Semester (1-3)')),
                ('credits', models.IntegerField(default=3, help_text='Number of credit hours')),
                ('is_core', models.BooleanField(default=True, help_text='Whether this is a core course')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(help_text='Academic year this course belongs to', on_delete=django.db.models.deletion.CASCADE, to='directory.academicyear')),
                ('target_classes', models.ManyToManyField(blank=True, help_text='Classes this course is designed for', related_name='courses', to='school.class')),
            ],
            options={
                'ordering': ['academic_year', 'year', 'semester', 'code'],
                'unique_together': {('code', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('meeting_url', models.URLField(blank=True)),
                ('scheduled_time', models.DateTimeField()),
                ('duration', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='course_api.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TimetableEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('subject', models.CharField(max_length=200)),
                ('time', models.CharField(max_length=50)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('group', models.CharField(blank=True, max_length=50)),
                ('lecturer', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_entries', to='course_api.course')),
            ],
            options={
                'ordering': ['day', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('video_url', models.URLField(blank=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('platform', models.CharField(choices=[('zoom', 'Zoom'), ('google_meet', 'Google Meet'), ('teams', 'Microsoft Teams'), ('physical', 'Physical Meeting'), ('other', 'Other')], default='zoom', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='course_api.course')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('timetable_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recordings', to='course_api.timetableentry')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('material_type', models.CharField(choices=[('course_wide', 'Course Wide'), ('topic_wise', 'Topic Wise'), ('lesson_specific', 'Lesson Specific')], default='course_wide', max_length=20)),
                ('topic', models.CharField(blank=True, help_text='Topic name for topic-wise materials', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='course_api.course')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('timetable_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='course_api.timetableentry')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]

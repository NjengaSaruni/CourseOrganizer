# Generated by Django 5.2.6 on 2025-09-19 04:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('course_api', '0004_meeting_daily_room_id_meeting_daily_room_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('content_type', models.CharField(choices=[('recording', 'Recording'), ('material', 'Material'), ('assignment', 'Assignment'), ('announcement', 'Announcement')], max_length=20)),
                ('lesson_date', models.DateField(help_text='Date when this lesson/content was delivered')),
                ('lesson_order', models.PositiveIntegerField(default=1, help_text='Order of this content within the lesson')),
                ('topic', models.CharField(blank=True, help_text='Topic or chapter name', max_length=200)),
                ('file_url', models.URLField(blank=True, help_text='URL to the content file')),
                ('file_path', models.CharField(blank=True, help_text='Local file path if stored locally', max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('recording_platform', models.CharField(blank=True, choices=[('zoom', 'Zoom'), ('google_meet', 'Google Meet'), ('teams', 'Microsoft Teams'), ('physical', 'Physical Meeting'), ('other', 'Other')], max_length=20)),
                ('duration', models.DurationField(blank=True, help_text='Duration for recordings', null=True)),
                ('audio_only', models.BooleanField(default=False, help_text='Whether this is an audio-only recording')),
                ('material_type', models.CharField(blank=True, choices=[('pdf', 'PDF Document'), ('doc', 'Word Document'), ('ppt', 'PowerPoint'), ('video', 'Video File'), ('audio', 'Audio File'), ('image', 'Image'), ('link', 'External Link'), ('other', 'Other')], max_length=20)),
                ('is_published', models.BooleanField(default=True, help_text='Whether this content is visible to students')),
                ('download_count', models.PositiveIntegerField(default=0, help_text='Number of times this content has been downloaded')),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of times this content has been viewed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_contents', to='course_api.course')),
                ('timetable_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_contents', to='course_api.timetableentry')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['lesson_date', 'lesson_order', 'created_at'],
                'indexes': [models.Index(fields=['course', 'lesson_date'], name='course_api__course__42ef62_idx'), models.Index(fields=['content_type', 'is_published'], name='course_api__content_cf3509_idx')],
                'unique_together': {('course', 'lesson_date', 'lesson_order')},
            },
        ),
    ]

# Generated by Django 5.2.6 on 2025-09-13 05:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('directory', '0002_alter_user_class_of_class_user_student_class'),
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the faculty', max_length=200)),
                ('code', models.CharField(help_text='Short code for the faculty', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the faculty')),
                ('dean', models.CharField(blank=True, help_text='Name of the faculty dean', max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this faculty is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['school', 'name'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the school', max_length=200)),
                ('code', models.CharField(help_text="Short code for the school (e.g., 'LAW', 'MED')", max_length=20, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the school')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this school is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the department', max_length=200)),
                ('code', models.CharField(help_text='Short code for the department', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the department')),
                ('head', models.CharField(blank=True, help_text='Name of the department head', max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this department is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='school.faculty')),
            ],
            options={
                'ordering': ['faculty', 'name'],
                'unique_together': {('faculty', 'code')},
            },
        ),
        migrations.AddField(
            model_name='faculty',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='school.school'),
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Class name (e.g., 'Class of 2029')", max_length=100)),
                ('program', models.CharField(help_text="Program name (e.g., 'Bachelor of Laws (LLB)')", max_length=100)),
                ('graduation_year', models.IntegerField(help_text='Expected graduation year')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this class is currently active')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default class for new students')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(help_text='Academic year this class started', on_delete=django.db.models.deletion.CASCADE, related_name='school_classes', to='directory.academicyear')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='school.department')),
            ],
            options={
                'ordering': ['-graduation_year', 'program'],
                'unique_together': {('department', 'graduation_year')},
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full program name', max_length=200)),
                ('code', models.CharField(help_text='Program code', max_length=20)),
                ('degree_level', models.CharField(help_text="Degree level (e.g., 'Bachelor', 'Master', 'PhD')", max_length=50)),
                ('duration_years', models.IntegerField(help_text='Program duration in years')),
                ('description', models.TextField(blank=True, help_text='Program description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this program is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='school.department')),
            ],
            options={
                'ordering': ['department', 'name'],
                'unique_together': {('department', 'code')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='faculty',
            unique_together={('school', 'code')},
        ),
    ]
